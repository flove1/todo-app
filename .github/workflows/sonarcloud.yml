name: sonarcloud

permissions:
  contents: read
  issues: write

on:
  workflow_dispatch:
  push:
    branches: [ "master" ]
    paths:
    - .github/workflows/sonarcloud.yml
  pull_request:
    branches: [ "master" ]
    paths:
    - .github/workflows/sonarcloud.yml
  schedule:
  - cron: 0 0 * * *

jobs:
  sonarcloud:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Analyze with SonarCloud
        uses: SonarSource/sonarcloud-github-action@4006f663ecaf1f8093e8e4abb9227f6041f52216
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args:
            -Dsonar.projectKey=flove1_todo-app
            -Dsonar.organization=flove1
            -Dsonar.sources=src
            -Dsonar.exclusions=**/test/**,**/*.test.*,**/*.spec.*
          projectBaseDir: .
      - name: Fetch SonarCloud issues and create findings file
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          PROJECT_KEY="flove1_todo-app"
          ORGANIZATION="flove1"
          # Fetch issues from SonarCloud API
          curl -s -u $SONAR_TOKEN: "https://sonarcloud.io/api/issues/search?componentKeys=$PROJECT_KEY&resolved=false&severities=MAJOR" > sonarcloud-issues.json
          # Format a simple markdown summary (customize as needed)
          echo "# SonarCloud Findings\n" > sonarcloud-findings.md
          jq -r '.issues[] | "- [\(.severity)] \(.message) (\(.component):\(.line))"' sonarcloud-issues.json >> sonarcloud-findings.md
          # Count issues
          export SONAR_ISSUE_COUNT=$(jq '.issues | length' sonarcloud-issues.json)
          echo "SONAR_ISSUE_COUNT=$SONAR_ISSUE_COUNT" >> $GITHUB_ENV
        shell: bash
      - name: Create GitHub Issue from SonarCloud findings
        if: env.SONAR_ISSUE_COUNT != '0'
        uses: peter-evans/create-issue-from-file@v5
        with:
          title: "SonarCloud Findings"
          content-filepath: sonarcloud-findings.md
          labels: sonarcloud, code-quality
